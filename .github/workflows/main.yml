# This is a basic workflow to help you get started with Actions

name: GithubActions-02

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Trigger TestGithubActions Pipeline
        run: |
          echo PAT: ${{ secrets.PAT }}
          echo Triggering pipeline for testGitHubActions repo,
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT }}" \
            https://api.github.com/repos/khizarsheikh/testGitHubActions/actions/workflows/main.yml/dispatches \
            -d '{"ref":"main"}'

      - name: Get testGitHubActions Workflow Run ID
        id: get-run
        run: |
          sleep 10  # small delay before fetching run
          run_id=""
          attempts=0
          while [[ -z "$run_id" && $attempts -lt 10 ]]; do
            response=$(curl -s -H "Authorization: Bearer ${{ secrets.PAT }}" \
              https://api.github.com/repos/khizarsheikh/testGitHubActions/actions/runs?branch=main&event=workflow_dispatch)

            run_id=$(echo "$response" | jq -r '.workflow_runs[] | select(.status=="in_progress" or .status=="queued") | .id' | head -n 1)

            if [[ -z "$run_id" ]]; then
              echo "Waiting for workflow run to start..."
              sleep 5
              ((attempts++))
            fi
          done

          if [[ -z "$run_id" ]]; then
            echo "❌ Failed to get workflow run ID."
            exit 1
          fi

          echo "✅ Found run_id: $run_id"
          echo "run_id=$run_id" >> $GITHUB_OUTPUT

      - name: Wait for testGitHubActions Workflow to Finish
        run: |
          run_id=${{ steps.get-run.outputs.run_id }}
          conclusion=""
          while [[ "$conclusion" != "success" && "$conclusion" != "failure" && "$conclusion" != "cancelled" ]]; do
            status_response=$(curl -s -H "Authorization: Bearer ${{ secrets.PAT }}" \
              https://api.github.com/repos/khizarsheikh/testGitHubActions/actions/runs/$run_id)

            status=$(echo "$status_response" | jq -r '.status')
            conclusion=$(echo "$status_response" | jq -r '.conclusion')

            echo "Workflow status: $status, conclusion: $conclusion"

            if [[ "$status" != "completed" ]]; then
              sleep 15
            fi
          done

          if [[ "$conclusion" != "success" ]]; then
            echo "❌ Workflow failed with conclusion: $conclusion"
            exit 1
          fi

          echo "✅ testGitHubActions workflow completed successfully."
